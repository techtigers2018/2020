// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot;

import frc.robot.commands.*;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */

public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    public Joystick js1;

    //test buttons
    public JoystickButton calSensorButton, testColorWheelMotorButton, testColorWheelReverseButton, hangerUpButton, hangerDownButton, winchUpButton, spoolButton;
    //testMotorButton, testSensorButton,

    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {

        // SmartDashboard Buttons
        // SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
        js1 = new Joystick(0);
        
        //Test and development commands
        //testMotorButton = new JoystickButton(js1, 6);
        //testMotorButton.whileHeld(new TestMotorCommand());
        //testSensorButton = new JoystickButton(js1, 7);
        //testSensorButton.whenPressed(new TestSensorCommand(false, true));
        calSensorButton = new JoystickButton(js1, 8);
        calSensorButton.whenPressed(new TestSensorCommand(true, false));

        testColorWheelMotorButton = new JoystickButton(js1, 5);
        testColorWheelReverseButton = new JoystickButton(js1, 3);
        testColorWheelMotorButton.whileHeld(new TestCWCommand(true));
        testColorWheelReverseButton.whileHeld(new TestCWCommand(false));

        hangerUpButton = new JoystickButton(js1, 6);
        hangerDownButton = new JoystickButton(js1, 9);
        winchUpButton = new JoystickButton(js1, 4);
        //winchDownButton = new JoystickButton(js1, 10);
        spoolButton = new JoystickButton(js1, 11);

        hangerDownButton.whileHeld(new HangingCommand(false));
        hangerUpButton.whileHeld(new HangingCommand(true));
        winchUpButton.whileHeld(new BuddyHangCommand(true,true));
        //winchDownButton.whileHeld(new BuddyHangCommand(false,false));
        spoolButton.whileHeld(new BuddyHangCommand(true, false));
    }
    public Joystick getjs1() {
        return js1;
    }
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}
